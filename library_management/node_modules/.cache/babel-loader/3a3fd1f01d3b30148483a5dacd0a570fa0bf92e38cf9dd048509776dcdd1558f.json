{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pruthvi Ramesh\\\\practice\\\\src\\\\components\\\\admin\\\\adminLogin.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../../styles/admin/adminLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  let navigate = useNavigate();\n  let email = useRef();\n  let password = useRef();\n  let submitAdmin = e => {\n    e.preventDefault();\n    let admin = {\n      email: \"admin@gmail.com\",\n      password: 12345\n    };\n    if (email.current.value == admin.email && password.current.value == admin.password) {\n      //navigate to admin portal\n      navigate('/adminPortal');\n    } else {\n      alert(\"Invalid admin credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adminLogin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminform\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitAdmin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adminEmail\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: email,\n            type: \"email\",\n            name: \"\",\n            id: \"\",\n            placeholder: \"enter your email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: password,\n            type: \"password\",\n            name: \"\",\n            id: \"\",\n            placeholder: \"enter your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginBtn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminLogin, \"Dibkd0YZAw8f4HMneG9YuCV72dY=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useRef","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","navigate","email","password","submitAdmin","e","preventDefault","admin","current","value","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","type","name","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Pruthvi Ramesh/practice/src/components/admin/adminLogin.jsx"],"sourcesContent":["import { useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../../styles/admin/adminLogin.css'\r\nconst AdminLogin = () => {\r\n    let navigate=useNavigate()\r\n    let email=useRef()\r\n    let password=useRef()\r\n    let submitAdmin=(e)=>{\r\n        e.preventDefault()\r\n        let admin={\r\n            email:\"admin@gmail.com\",\r\n            password:12345\r\n        }\r\n        if(email.current.value==admin.email && password.current.value==admin.password)\r\n        {\r\n            //navigate to admin portal\r\n            navigate('/adminPortal')\r\n        }\r\n        else{\r\n            alert(\"Invalid admin credentials\")\r\n        }\r\n    }\r\n    return ( \r\n        <div className=\"adminLogin\">\r\n            <h1>Admin Login</h1>\r\n            <div className=\"adminform\">\r\n                <form onSubmit={submitAdmin}>\r\n                    <div className=\"adminEmail\">\r\n                        <input ref={email} type=\"email\" name=\"\" id=\"\" placeholder=\"enter your email address\"/>\r\n                    </div>\r\n                    <div className=\"password\">\r\n                        <input ref={password} type=\"password\" name=\"\" id=\"\" placeholder=\"enter your password\" />\r\n                    </div>\r\n                    <div className=\"loginBtn\">\r\n                        <button>Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AdminLogin;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,IAAIC,QAAQ,GAACL,WAAW,CAAC,CAAC;EAC1B,IAAIM,KAAK,GAACP,MAAM,CAAC,CAAC;EAClB,IAAIQ,QAAQ,GAACR,MAAM,CAAC,CAAC;EACrB,IAAIS,WAAW,GAAEC,CAAC,IAAG;IACjBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,KAAK,GAAC;MACNL,KAAK,EAAC,iBAAiB;MACvBC,QAAQ,EAAC;IACb,CAAC;IACD,IAAGD,KAAK,CAACM,OAAO,CAACC,KAAK,IAAEF,KAAK,CAACL,KAAK,IAAIC,QAAQ,CAACK,OAAO,CAACC,KAAK,IAAEF,KAAK,CAACJ,QAAQ,EAC7E;MACI;MACAF,QAAQ,CAAC,cAAc,CAAC;IAC5B,CAAC,MACG;MACAS,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ,CAAC;EACD,oBACIZ,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtBd,OAAA;QAAMmB,QAAQ,EAAEb,WAAY;QAAAQ,QAAA,gBACxBd,OAAA;UAAKa,SAAS,EAAC,YAAY;UAAAC,QAAA,eACvBd,OAAA;YAAOoB,GAAG,EAAEhB,KAAM;YAACiB,IAAI,EAAC,OAAO;YAACC,IAAI,EAAC,EAAE;YAACC,EAAE,EAAC,EAAE;YAACC,WAAW,EAAC;UAA0B;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CAAC,eACNlB,OAAA;UAAKa,SAAS,EAAC,UAAU;UAAAC,QAAA,eACrBd,OAAA;YAAOoB,GAAG,EAAEf,QAAS;YAACgB,IAAI,EAAC,UAAU;YAACC,IAAI,EAAC,EAAE;YAACC,EAAE,EAAC,EAAE;YAACC,WAAW,EAAC;UAAqB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CAAC,eACNlB,OAAA;UAAKa,SAAS,EAAC,UAAU;UAAAC,QAAA,eACrBd,OAAA;YAAAc,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAhB,EAAA,CArCKD,UAAU;EAAA,QACCH,WAAW;AAAA;AAAA2B,EAAA,GADtBxB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}